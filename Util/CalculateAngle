이번에 제작하는 프로젝트는 마우스 클릭을 통한 이동 기능을 가지고있기 때문에 이동하는 방향의 각도를 계산하는 것이 중요하다.

따라서 그에 따라 각을 계산하는 함수 제작

public void CalculateAngle(Vector3 dest)
{
  float Dot = Vector3.Dot(transform.forward,(dest - tranform.position).normalized);
  //-현재의 위치에서 앞으로보는 벡터값과 도착지의 포지션과 현재의 포지션을 뺸 벡터를 normalized한 벡터값 사이의 값 
  //이해를 편하게 하기 위해 2차원 평면에 A(0,0),b(5,5)가 있다고 가정하고 A에서 B로 가는 벡터는(5,5)가 될것이다.
  //하지만 정규화한 크기를 구하기 위해서는 normalized를 통해 (1,1)로 변환하여 계산한다.
  //그러면 방향 벡터는(1,1)가 된다
  
  
  float Radian = Mathf.Acos(Dot);
  //Mahtf.Acos를 사용하여 위의 값을 라디안 값으로 바꿈
  
  float Degree = Radian * Mathf.Rad2Deg;
  //라디안 값을 Degree로 바꾸려면 라디안 값에 Rad2Deg를 곱한다.(각을 라디안으로 바꾸려면 각에 Deg2Rad곱) 
  
   if (Degree>0.5f)
        {
            navMeshAgent.nextPosition= transform.position;
            //다음 이동 장소로 현재의 위치를 선정
            navMeshAgent.ResetPath();
            //그리고 이동할 path값으 초기화
        }
  //각이 많이 벌어져서 미끄러지는 것을 방어하기 위해 작성한 것
  
    navMeshAgent.SetDestination(dest);
    //목표지점 재설정
    destination = dest;
    IsMove = true;

}
